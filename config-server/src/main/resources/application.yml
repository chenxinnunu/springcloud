server:
  #启动之后改变端口号，在启动，即可模拟高可用
  port: 8300
spring:
  application:
    name: config-server
  #配置服务开启安全验证
  security:
    user:
      name: admin
      password: 123456
  cloud:
    config:
      server:
        git:
          uri: https://github.com/ruichenggit/config.git #配置git仓库的地址
          username: ruichenggit
          password: rRCRQ2018?12313
          #配置git仓库下的相对地址，可以配置多个，用 , 分割
          search-paths: config-repo
  #spring clooud Bus消息总线能够代理实例的各个节点，一个节点刷新会通知其他节点也刷新
  #实现方式用rabbitmq消息代理作为通道，需要安装rabbitmq，将server端也加入消息总线，为了让server发请求给消息总线，保持服务单一职责性，对等性等
  rabbitmq:
    host: 119.29.222.73
    port: 5672
    username: admin
    password: 123456
eureka:
  client:
    serviceUrl:
      defaultZone: http://admin:123456@localhost:8000/eureka/
  instance:
    prefer-ip-address: true
#Spring Cloud Config也提供本地存储配置的方式。
#我们只需要设置属性spring.profiles.active=native，Config Server会默认从应用的src/main/resource目录下检索配置文件。
#也可以通过spring.cloud.config.server.native.searchLocations=file:E:/properties/属性来指定配置文件的位置。
#虽然Spring Cloud Config提供了这样的功能，但是为了支持更好的管理内容和版本控制的功能，还是推荐使用git的方式。